import keyboards

from aiogram import types
from aiogram.dispatcher import FSMContext
from loader import dp
from utils.db_api import db
from data.config import ADMINS,PAYMENT_TOKEN
from states import OrderState
from loader import bot


@dp.message_handler(content_types=['text'])
async def text_buttons_func(message: types.Message, state: FSMContext):
    match message.text:
        case '‚ûï–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑':
            await state.finish()
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–≥–æ—Ä–æ–¥][—É–ª–∏—Ü–∞][–¥–æ–º\–∫–≤–∞—Ä—Ç–∏—Ä–∞]',reply_markup=types.ReplyKeyboardRemove())
            await OrderState.adress.set()

        case 'üìã–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏–π –ø–æ –≥—Ä—É–ø–ø–∞–º':
            try:
                row_text = db.show_all_position()
                await message.answer(row_text)
            except:
                await message.answer('–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–∑–∏—Ü–∏–π –≤ –±–∞–∑–µ')

        case 'üë®‚Äçü¶≥ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
            text = db.show_all_users()
            await message.answer(text)

        case '‚óÄÔ∏è–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é': 
                await message.answer('–ú–µ–Ω—é',reply_markup=keyboards.default.menu)

        case _:
            await message.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')

